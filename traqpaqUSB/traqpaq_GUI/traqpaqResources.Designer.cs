//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace traqpaq_GUI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class traqpaqResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal traqpaqResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("traqpaq_GUI.traqpaqResources", typeof(traqpaqResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot; /&gt;
        ///
        ///		&lt;!-- Always force latest IE rendering engine (even in intranet) &amp; Chrome Frame
        ///		Remove this if you use the .htaccess --&gt;
        ///		&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;
        ///
        ///		&lt;title&gt;ge&lt;/title&gt;
        ///		&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
        ///		&lt;meta name=&quot;author&quot; content=&quot;Kyle&quot; /&gt;
        ///		
        ///		&lt;script type=&quot;text/javascript&quot; src=&quot;https://www.google.com/jsapi&quot;&gt;&lt;/script&gt;
        ///		&lt;script type=&quot;text/javascript&quot;&gt;
        ///			var ge;
        ///			googl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ge {
            get {
                return ResourceManager.GetString("ge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!--
        ///You are free to copy and use this sample in accordance with the terms of the
        ///Apache license (http://www.apache.org/licenses/LICENSE-2.0.html)
        ///--&gt;
        ///&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///  &lt;head&gt;
        ///    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;
        ///    &lt;title&gt;Google Earth API Sample&lt;/title&gt;
        ///    &lt;script src=&quot;http://www.google.com/jsapi?key=ABQIAAAAuPsJpk3MBtDpJ4G8 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string test {
            get {
                return ResourceManager.GetString("test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///   &lt;title&gt;Sample&lt;/title&gt;
        ///   &lt;script src=&quot;http://www.google.com/jsapi?key=&quot;My App key here&quot;&gt; &lt;/script&gt;
        ///   &lt;script type=&quot;text/javascript&quot;&gt;
        ///      var ge;
        ///      google.load(&quot;earth&quot;, &quot;1&quot;);
        ///
        ///      function init() {
        ///         google.earth.createInstance(&apos;map3d&apos;, initCB, failureCB);
        ///      }
        ///
        ///      function initCB(instance) {
        ///         ge = instance;
        ///         ge.getWindow().setVisibility(true);
        ///
        ///ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);
        ///
        ///	 ge.getLayerRoot().enableLaye [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string testGE {
            get {
                return ResourceManager.GetString("testGE", resourceCulture);
            }
        }
    }
}
