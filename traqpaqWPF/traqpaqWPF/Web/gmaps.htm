<!--
You are free to copy and use this sample in accordance with the terms of the
Apache license (http://www.apache.org/licenses/LICENSE-2.0.html)
-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>Google Maps V3 API Sample</title>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&key=AIzaSyDWXhgxNlG-9r0ChUrmTuRX8uE9MG6N56o"></script>
    <script src="scripts/google-maps-3-vs-1-0.js" type="text/javascript"></script>
    <script type="text/javascript">
        var map;
        // Use this to keep track of the lines added
        var polylineArray = new Array();

        function initialize() {
            var mapDiv = document.getElementById('map-canvas');
            map = new google.maps.Map(mapDiv, {
                center: new google.maps.LatLng(38.06827, -98.59313),
                zoom: 3,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            
        }

        function addPoints(latitudes, longitudes, color, idx) {
            // Eval all paramaters (might need to use JSON for security)
            var lats = eval(latitudes);
            var longs = eval(longitudes);
            var index = eval(idx);

            var bounds = new google.maps.LatLngBounds();
            var path = new Array();
            // Assign the coordinats to the path
            for (i = 0; i < lats.length; i++) {
                path[i] = new google.maps.LatLng(lats[i], longs[i]);
                bounds.extend(path[i]);
            }
            if (!polylineArray[index]) {
                polylineArray[index] = new google.maps.Polyline({
                    path: path,
                    strokeColor: color,
                    strokeOpacity: 1.0,
                    strokeWeight: 2
                });                
            }
            // Else, the line already exists
            // Check if it is set to the map
            if (!polylineArray[index].getMap()) {
                polylineArray[index].setMap(map)
            }
            /*
            var line = new google.maps.Polyline({
                path: path,
                strokeColor: color,
                strokeOpacity: 1.0,
                strokeWeight: 2
            });
            line.setMap(map);   */
            map.fitBounds(bounds);         
        }

        function removeLine(lap) {
            try {
                // The problem was not with the object array, it was with the passed parameter
                // Passing it as a string and then casting as number works
                polylineArray[Number(lap)].setMap(null);                
            }
            catch (err) {
                alert(err);
            }
        }

        function changeColor(lap, color) {
            try {
                polylineArray[Number(lap)].setOptions({ strokeColor: color });
            }
            catch (err) {   // usually this error is a result of the lap not being on the map yet
                //alert(err);
            }
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>
<body style="font-family: Arial; border: 0 none;">
    <div id="map-canvas" style="width: 500px; height: 400px">
    </div>
</body>
</html>
